{"version":3,"sources":["context/Context.js","components/Header/Header.js","components/Algorithms/Search/LinearSearch/LinearSearch.js","components/Algorithms/Search/BinarySearch/BinarySearch.js","components/Algorithms/Search/JumpSearch/JumpSearch.js","components/Algorithms/DynamicProgramming/Fibonacci/Fibonacci.js","components/Algorithms/Backtracking/NQueens/NQueens.js","components/Algorithms/Backtracking/SumOfSubSets/SumOfSubsets.js","components/Algorithms/Recursion/NFactorial.js","components/Algorithms/DynamicProgramming/SlidingWindow/SlidingWindow.js","components/Algorithms/Search/QuickSelect/QuickSelect.js","components/Algorithms/Sorting/BubbleSort/BubbleSort.js","components/Content/Content.js","components/CodeStrings/CodeStringsCPP.js","components/CodeStrings/CodeStringsPY.js","App.js","serviceWorker.js","index.js"],"names":["Context","createContext","ContextProvider","props","useState","selectedComponent","setSelectedComponent","speed","setSpeed","Provider","value","children","Header","useContext","name","subCategories","menu","selectedIndex","setSelectedIndex","Helmet","className","undefined","icon","faChevronRight","style","marginLeft","marginRight","faHeart","href","target","paddingTop","faCode","faStar","onClick","document","body","requestFullscreen","faExpand","faTachometerAlt","id","type","min","max","step","onChange","e","map","menuItem","index","key","toggle","faChevronDown","subCategory","LinearSearch","array","setArray","currentIndex","setCurrentIndex","setTarget","messages","setMessages","generateArray","tempArray","i","number","Math","floor","random","push","useEffect","sleep","milliseconds","Promise","resolve","setTimeout","linearSearch","a","trim","length","parseInt","alert","faSyncAlt","focus","placeholder","faPlay","message","BinarySearch","leftIndex","setLeftIndex","rightIndex","setRightIndex","binarySearch","left","right","mid","JumpSearch","prevIndex","setPrevIndex","stepIndex","setStepIndex","jumpSearch","sqrt","prev","n","Fibonacci","firstIndex","setFirstIndex","secondIndex","setSecondIndex","generateFibonacci","NQueens","boardValue","setBoardValue","board","setBoard","currentGrid","setCurrentGrid","isSafe","row","col","j","N","solveNQ","tempBoard","console","log","overflow","rowIndex","colIndex","SumOfSubSets","solution","solve","sum","execute","NFactorial","nthFactorial","res","SlidingWindow","maxSum","windowSum","QuickSelect","resultIndex","setResultIndex","setPivotIndex","quickSelect","startIndex","endIndex","position","pivotIndex","swap","temp","bubbleSort","title","height","width","Content","codeString","language","setLanguage","Component","SumOfSubsets","BubbleSort","atomDark","customStyle","fontSize","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e5c9753b.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\n\nexport const Context = createContext();\n\nconst ContextProvider = (props) => {\n  const [selectedComponent, setSelectedComponent] = useState(\"BubbleSort\");\n  const [speed, setSpeed] = useState(1);\n\n  return (\n    <Context.Provider\n      value={{ selectedComponent, setSelectedComponent, speed, setSpeed }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n};\n\nexport default ContextProvider;\n","import React, { useState, useContext } from \"react\";\n\n// Stylesheets\nimport \"./Header.css\";\n\n// React helmet\nimport { Helmet } from \"react-helmet\";\n\n// Fontawesome icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faStar,\n  faChevronRight,\n  faTachometerAlt,\n  faCode,\n  faChevronDown,\n  faHeart,\n  faExpand,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// Context\nimport { Context } from \"../../context/Context\";\n\nconst Header = () => {\n  const { speed, setSpeed } = useContext(Context);\n  const { selectedComponent, setSelectedComponent } = useContext(Context);\n  const [menu] = useState([\n    {\n      name: \"Backtracking\",\n      subCategories: [\n        {\n          name: \"N Queens Placement\",\n          value: \"NQueens\",\n        },\n        {\n          name: \"Sum Of Subsets\",\n          value: \"SumOfSubsets\",\n        },\n      ],\n    },\n    {\n      name: \"Simple Recursion\",\n      subCategories: [\n        {\n          name: \"N Factorial\",\n          value: \"NFactorial\",\n        },\n      ],\n    },\n    {\n      name: \"Branch and Bound\",\n      subCategories: [\n        {\n          name: \"Binary Search\",\n          value: \"BinarySearch\",\n        },\n      ],\n    },\n    {\n      name: \"Dynamic Programming\",\n      subCategories: [\n        {\n          name: \"Fibonacci\",\n          value: \"Fibonacci\",\n        },\n      ],\n    },\n    {\n      name: \"Searching\",\n      subCategories: [\n        {\n          name: \"Linear Search\",\n          value: \"LinearSearch\",\n        },\n        {\n          name: \"Jump Search\",\n          value: \"JumpSearch\",\n        },\n        {\n          name: \"Quick Select (kth smallest)\",\n          value: \"QuickSelect\",\n        },\n      ],\n    },\n    {\n      name: \"Sorting\",\n      subCategories: [\n        {\n          name: \"Bubble Sort\",\n          value: \"BubbleSort\",\n        },\n      ],\n    },\n  ]);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n\n  const handleChange = (e) => {\n    setSpeed(e.target.value);\n  };\n\n  const toggle = (index) => {\n    setSelectedIndex(index);\n  };\n  return (\n    <div>\n      <Helmet>\n        <title>{selectedComponent + \"- Algorithm Visualizer\"}</title>\n      </Helmet>\n      <div className=\"header\">\n        <div className=\"title\">\n          Algorithm Visualizer\n          {selectedComponent !== \"\" && selectedComponent !== undefined ? (\n            <span>\n              <FontAwesomeIcon\n                icon={faChevronRight}\n                style={{ marginLeft: 10, marginRight: 10 }}\n              />\n              {selectedComponent}\n            </span>\n          ) : null}\n        </div>\n        <div className=\"trademark\">\n          Made with <FontAwesomeIcon icon={faHeart} /> by{\" \"}\n          <a\n            href=\"https://linkedin.com/in/saranrajshri\"\n            target=\"_blank\"\n            className=\"profile-link\"\n          >\n            Shri Saran Raj\n          </a>\n        </div>\n      </div>\n      <div className=\"settings\" style={{ paddingTop: 3 }}>\n        <div className=\"content\">\n          <div className=\"left-content\">\n            <span className=\"font-weight-bold cursor-pointer menu-item\">\n              <FontAwesomeIcon icon={faCode} /> Github\n            </span>\n            <span className=\"font-weight-bold cursor-pointer menu-item\">\n              <FontAwesomeIcon icon={faStar} /> Star\n            </span>\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={() => document.body.requestFullscreen()}\n            >\n              <FontAwesomeIcon icon={faExpand} /> Full Screen\n            </span>\n            <span className=\"font-weight-bold cursor-pointer menu-item\">\n              <FontAwesomeIcon icon={faTachometerAlt} /> Speed\n            </span>\n            <span>\n              <input\n                id=\"range\"\n                type=\"range\"\n                value={speed}\n                min=\"1\"\n                max=\"5\"\n                step=\"1\"\n                onChange={handleChange}\n                className=\"slider\"\n              />\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Side Nav */}\n      <div className=\"sidenav\">\n        <div className=\"menu\">\n          {menu.map((menuItem, index) => {\n            return (\n              <div\n                className=\"menu-title\"\n                key={index}\n                onClick={() => toggle(index)}\n              >\n                <span>{menuItem.name} </span>\n\n                {index === selectedIndex ? (\n                  <FontAwesomeIcon icon={faChevronDown} className=\"chevron\" />\n                ) : (\n                  <FontAwesomeIcon icon={faChevronRight} className=\"chevron\" />\n                )}\n\n                <div className=\"options\">\n                  {index === selectedIndex\n                    ? menuItem.subCategories.map((subCategory, index) => {\n                        return (\n                          <div\n                            className=\"sub-menu-title\"\n                            onClick={() =>\n                              setSelectedComponent(subCategory.value)\n                            }\n                            key={index}\n                          >\n                            {subCategory.name}\n                          </div>\n                        );\n                      })\n                    : null}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport \"./LinearSearch.css\";\n\n// Fontawesome icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n// Context\nimport { Context } from \"../../../../context/Context\";\n\nconst LinearSearch = () => {\n  const [array, setArray] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [target, setTarget] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const { speed } = useContext(Context);\n\n  const generateArray = () => {\n    setCurrentIndex(-1);\n    setMessages([]);\n    setTarget(\"\");\n\n    var tempArray = [];\n    for (var i = 0; i < 15; i++) {\n      var number = Math.floor(Math.random() * 100 + 1);\n      tempArray.push(number);\n    }\n    setArray(tempArray);\n  };\n\n  // Component Did Mount\n  useEffect(() => {\n    generateArray();\n  }, []);\n\n  const sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n\n  const handleChange = (e) => {\n    setTarget(e.target.value);\n  };\n\n  // linear Search\n  const linearSearch = async () => {\n    if (target.trim() !== \"\") {\n      for (var i = 0; i < array.length; i++) {\n        setCurrentIndex(i);\n        await sleep((6 - speed) * 1000);\n        setCurrentIndex(i + 1);\n\n        // Log tracer\n        setMessages((messages) => [\n          ...messages,\n          `Checking at index ${i}. Value at index ${i} is ${array[i]}`,\n        ]);\n\n        if (array[i] === parseInt(target)) {\n          // Log tracer\n          setMessages((messages) => [\n            ...messages,\n            `Element Found at index ${i}`,\n          ]);\n\n          setCurrentIndex(i);\n          break;\n        }\n      }\n    } else {\n      alert(\"Enter the element to find\");\n    }\n  };\n  return (\n    <div>\n      <div className=\"settings\">\n        <div className=\"content\">\n          <div className=\"left-content\">\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={generateArray}\n            >\n              <FontAwesomeIcon icon={faSyncAlt} /> Generate array\n            </span>\n            <input\n              type=\"text\"\n              focus\n              placeholder=\"Element to be found\"\n              className=\"inputField\"\n              onChange={handleChange}\n              value={target}\n            />\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={linearSearch}\n            >\n              <FontAwesomeIcon icon={faPlay} /> Play\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"mainContent\">\n        <div className=\"node-wrapper\">\n          {array.map((value, index) => {\n            return (\n              <div\n                key={index}\n                className={index === currentIndex ? \"node currentNode\" : \"node\"}\n              >\n                {value}\n              </div>\n            );\n          })}\n        </div>\n        {/* Log Tracer */}\n        <div className=\"log-tracer\">\n          <div className=\"label\">Log Tracer</div>\n          <div className=\"content\">\n            {messages.map((message) => {\n              return <p>{message}</p>;\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LinearSearch;\n","import React, { useState, useEffect, useContext } from \"react\";\n\n// Stylesheet\nimport \"./BinarySearch.css\";\n\n// Fontawesome icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n// Context\nimport { Context } from \"../../../../context/Context\";\n\nconst BinarySearch = () => {\n  const [array, setArray] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [leftIndex, setLeftIndex] = useState(-1);\n  const [rightIndex, setRightIndex] = useState(-1);\n  const [target, setTarget] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const { speed } = useContext(Context);\n\n  const generateArray = () => {\n    setCurrentIndex(-1);\n    setLeftIndex(-1);\n    setRightIndex(-1);\n    setTarget(\"\");\n\n    var tempArray = [];\n    var number = Math.floor(Math.random() * 80 + 1);\n    for (var i = number; i < number + 15; i++) {\n      tempArray.push(i);\n    }\n    setArray(tempArray);\n  };\n\n  // Component Did Mount\n  useEffect(() => {\n    generateArray();\n  }, []);\n\n  const sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n\n  const handleChange = (e) => {\n    setTarget(e.target.value);\n  };\n\n  // binary Search\n  const binarySearch = async () => {\n    if (target.trim() !== \"\") {\n      var left = 0;\n      setLeftIndex(left);\n      var right = array.length;\n      setRightIndex(right);\n\n      while (left <= right) {\n        var mid = Math.floor(left + (right - left) / 2);\n\n        // Log tracer\n        setMessages((messages) => [...messages, `Middle Index : ${mid}`]);\n\n        setCurrentIndex(mid);\n        if (array[mid] === parseInt(target)) {\n          // Log tracer\n          setMessages((messages) => [\n            ...messages,\n            `Element found at index ${mid}`,\n          ]);\n          break;\n        } else if (array[mid] < target) {\n          left = mid + 1;\n          setLeftIndex(left);\n          // Log tracer\n          setMessages((messages) => [\n            ...messages,\n            `Moving the left pointer to the index ${mid + 1}`,\n          ]);\n          await sleep((6 - speed) * 1000);\n        } else {\n          right = mid - 1;\n          setRightIndex(right);\n          // Log tracer\n          setMessages((messages) => [\n            ...messages,\n            `Moving the right pointer to the index ${mid - 1}`,\n          ]);\n          await sleep((6 - speed) * 1000);\n        }\n      }\n    } else {\n      alert(\"Enter the element to find\");\n    }\n  };\n  return (\n    <div>\n      <div className=\"settings\">\n        <div className=\"content\">\n          <div className=\"left-content\">\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={generateArray}\n            >\n              <FontAwesomeIcon icon={faSyncAlt} /> Generate array\n            </span>\n            <input\n              type=\"text\"\n              focus\n              placeholder=\"Element to be found\"\n              className=\"inputField\"\n              value={target}\n              onChange={handleChange}\n            />\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={binarySearch}\n            >\n              <FontAwesomeIcon icon={faPlay} /> Play\n            </span>\n          </div>\n        </div>\n      </div>\n      {/* Main Content */}\n      <div className=\"mainContent\">\n        <div className=\"node-wrapper\">\n          {array.map((value, index) => {\n            return (\n              <div\n                key={index}\n                className={\n                  index === currentIndex\n                    ? \"node currentNode\"\n                    : index >= leftIndex && index <= rightIndex\n                    ? \"node rangeNode\"\n                    : \"node\"\n                }\n              >\n                {value}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Log Tracer */}\n      <div className=\"log-tracer\">\n        <div className=\"label\">Log Tracer</div>\n        <div className=\"content\">\n          {messages.map((message) => {\n            return <p>{message}</p>;\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BinarySearch;\n","import React, { useState, useEffect, useContext } from \"react\";\n\n// StyleSheet\nimport \"./JumpSearch.css\";\n\n// Fontawesome icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n// Context\nimport { Context } from \"../../../../context/Context\";\n\nconst JumpSearch = () => {\n  const [array, setArray] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [prevIndex, setPrevIndex] = useState(-1);\n  const [stepIndex, setStepIndex] = useState(-1);\n  const [target, setTarget] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const { speed } = useContext(Context);\n\n  const generateArray = () => {\n    setCurrentIndex(-1);\n    setPrevIndex(-1);\n    setStepIndex(-1);\n    setMessages([]);\n\n    var tempArray = [];\n    var number = Math.floor(Math.random() * 80 + 1);\n    for (var i = number; i < number + 15; i++) {\n      tempArray.push(i);\n    }\n    setArray(tempArray);\n  };\n\n  // Component Did Mount\n  useEffect(() => {\n    generateArray();\n  }, []);\n\n  const sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n\n  const handleChange = (e) => {\n    setTarget(e.target.value);\n  };\n\n  // jump Search\n  const jumpSearch = async () => {\n    if (target.trim() !== \"\") {\n      var step = Math.floor(Math.sqrt(array.length));\n      setStepIndex(step);\n\n      // Log tracer\n      setMessages((messages) => [...messages, `Step value : ${step}`]);\n\n      await sleep((6 - speed) * 1000);\n      var prev = 0;\n      var n = array.length;\n      while (array[Math.min(step, n) - 1] < target) {\n        prev = step;\n        setPrevIndex(prev);\n        // Log tracer\n        setMessages((messages) => [...messages, `Previous Index : ${prev}`]);\n\n        await sleep((6 - speed) * 1000);\n        step += Math.floor(Math.sqrt(n));\n\n        // Log tracer\n        setMessages((messages) => [...messages, `Step value : ${step}`]);\n        setStepIndex(step);\n        await sleep((6 - speed) * 1000);\n\n        if (prev >= n) {\n          setCurrentIndex(-1);\n          // Log tracer\n          setMessages((messages) => [...messages, `Element Not Found`]);\n          break;\n        }\n      }\n\n      while (array[prev] < target) {\n        prev++;\n        setPrevIndex(prev);\n        // Log tracer\n        setMessages((messages) => [...messages, `Previous Index : ${prev}`]);\n        await sleep((6 - speed) * 1000);\n        if (prev === Math.min(step, n)) {\n          setCurrentIndex(-1);\n          // Log tracer\n          setMessages((messages) => [...messages, `Element Not Found`]);\n          break;\n        }\n      }\n\n      if (array[prev] === parseInt(target)) {\n        setCurrentIndex(prev);\n        // Log tracer\n        setMessages((messages) => [...messages, `Element Found at ${prev}`]);\n      }\n    } else {\n      alert(\"Enter the element to find\");\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"settings\">\n        <div className=\"content\">\n          <div className=\"left-content\">\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={generateArray}\n            >\n              <FontAwesomeIcon icon={faSyncAlt} /> Generate array\n            </span>\n            <input\n              type=\"text\"\n              focus\n              placeholder=\"Element to be found\"\n              className=\"inputField\"\n              onChange={handleChange}\n              value={target}\n            />\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={jumpSearch}\n            >\n              <FontAwesomeIcon icon={faPlay} /> Play\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"mainContent\">\n        <div className=\"node-wrapper\">\n          {array.map((value, index) => {\n            return (\n              <div\n                key={index}\n                className={\n                  index === currentIndex\n                    ? \"node currentNode\"\n                    : index === prevIndex\n                    ? \"node rangeNode\"\n                    : index >=\n                        stepIndex - Math.floor(Math.sqrt(array.length)) &&\n                      index <= stepIndex\n                    ? \"node stepIndexNode\"\n                    : \"node\"\n                }\n              >\n                {value}\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"log-tracer\">\n          <div className=\"label\">Log Tracer</div>\n          <div className=\"content\">\n            {messages.map((message) => {\n              return <p>{message}</p>;\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JumpSearch;\n","import React, { useState, useEffect, useContext } from \"react\";\n\n// Stylesheet\nimport \"./Fibonacci.css\";\n\n// Fontawesome icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\n\n// Context\nimport { Context } from \"../../../../context/Context\";\n\nconst Fibonacci = () => {\n  const [array, setArray] = useState([]);\n  const [firstIndex, setFirstIndex] = useState(-1);\n  const [secondIndex, setSecondIndex] = useState(-1);\n  const [messages, setMessages] = useState([]);\n  const { speed } = useContext(Context);\n\n  const generateArray = () => {\n    var tempArray = [];\n    for (var i = 0; i < 15; i++) {\n      var number = 0;\n      tempArray.push(number);\n    }\n    setArray(tempArray);\n  };\n\n  // Component Did Mount\n  useEffect(() => {\n    generateArray();\n  }, []);\n\n  const sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n\n  // generateFibonacci\n  const generateFibonacci = async () => {\n    array[0] = 0;\n    setFirstIndex(0);\n    await sleep((6 - speed) * 1000);\n\n    array[1] = 1;\n    setSecondIndex(1);\n    await sleep((6 - speed) * 1000);\n\n    for (var i = 2; i < array.length; i++) {\n      array[i] = array[i - 1] + array[i - 2];\n      setMessages((messages) => [\n        ...messages,\n        `Adding Values at index ${i - 2} and ${i - 1} : ${array[i - 2]} + ${\n          array[i - 1]\n        } = ${array[i - 1] + array[i - 2]}`,\n      ]);\n\n      setFirstIndex(i);\n      setSecondIndex(i - 1);\n      await sleep((6 - speed) * 1000);\n    }\n  };\n  return (\n    <div>\n      <div className=\"settings\">\n        <div className=\"content\">\n          <div className=\"left-content\">\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={generateFibonacci}\n            >\n              <FontAwesomeIcon icon={faPlay} /> Play\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"mainContent\">\n        <div className=\"node-wrapper\">\n          {array.map((value, index) => {\n            return (\n              <div\n                key={index}\n                className={\n                  index === firstIndex\n                    ? \"node firstIndex\"\n                    : index === secondIndex\n                    ? \"node secondIndex\"\n                    : \"node\"\n                }\n              >\n                {value}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      {/* Log Tracer */}\n      <div className=\"log-tracer\">\n        <div className=\"label\">Log Tracer</div>\n        <div className=\"content\">\n          {messages.map((message) => {\n            return <p>{message}</p>;\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Fibonacci;\n","import React, { useState, useEffect } from \"react\";\n\n// Stylesheet\nimport \"./NQueens.css\";\n\n// Fontawesome icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NQueens = () => {\n  const [boardValue, setBoardValue] = useState();\n  const [board, setBoard] = useState([]);\n  const [currentGrid, setCurrentGrid] = useState([-1, -1]);\n  const [messages, setMessages] = useState([]);\n\n  const sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n\n  const isSafe = (board, row, col) => {\n    var i, j;\n    var N = board.length;\n\n    /* Check this row on left side */\n    for (i = 0; i < col; i++) if (board[row][i]) return false;\n\n    /* Check upper diagonal on left side */\n    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)\n      if (board[i][j]) return false;\n\n    /* Check lower diagonal on left side */\n    for (i = row, j = col; j >= 0 && i < N; i++, j--)\n      if (board[i][j]) return false;\n\n    return true;\n  };\n\n  // recursive call\n  const solveNQ = async (board, col) => {\n    if (col >= board.length) return true;\n\n    for (var i = 0; i < board.length; i++) {\n      setMessages((messages) => [...messages, `Checking row ${i} col  ${col}`]);\n\n      //   console.log(i, col);\n      setCurrentGrid([i, col]);\n      await sleep(100);\n\n      if (isSafe(board, i, col)) {\n        setMessages((messages) => [\n          ...messages,\n          `Placing Queen at row ${i} col  ${col}`,\n        ]);\n\n        var tempBoard = board;\n        tempBoard[i][col] = 1;\n        setBoard(tempBoard);\n\n        await sleep(1000);\n        if (await solveNQ(board, col + 1)) {\n          setCurrentGrid([-1, -1]);\n          return true;\n        }\n\n        tempBoard = await board;\n        setMessages((messages) => [\n          ...messages,\n          `Backtracking row ${i} col ${col}`,\n        ]);\n\n        tempBoard[i][col] = 0;\n        setBoard(tempBoard);\n        await sleep(1000);\n      }\n    }\n\n    return false;\n  };\n\n  //   driver code\n  const solve = () => {\n    if (solveNQ(board, 0) === false) {\n      setMessages((messages) => [...messages, `No Solution`]);\n      return false;\n    }\n    return true;\n  };\n\n  useEffect(() => {\n    // solve();\n  }, []);\n\n  const handleChange = (e) => {\n    setBoardValue(parseInt(e.target.value));\n    var tempBoard = [];\n    var n = parseInt(e.target.value);\n    for (var i = 0; i < n; i++) {\n      var row = [];\n      for (var j = 0; j < n; j++) {\n        row.push(0);\n      }\n      tempBoard.push(row);\n    }\n\n    setBoard(tempBoard);\n  };\n  console.log(board);\n  return (\n    <div>\n      <div className=\"settings\">\n        <div className=\"content\">\n          <div className=\"left-content\">\n            <input\n              type=\"number\"\n              focus\n              placeholder=\"Board Size\"\n              className=\"inputField\"\n              onChange={handleChange}\n              value={boardValue}\n              max={8}\n            />\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={solve}\n            >\n              <FontAwesomeIcon icon={faPlay} /> Play\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* MainContent */}\n      <div className=\"mainContent\" style={{ overflow: \"auto\" }}>\n        {board.map((row, rowIndex) => {\n          return (\n            <div className=\"grid-row\" key={rowIndex}>\n              {row.map((col, colIndex) => {\n                return (\n                  <div\n                    className={\n                      rowIndex === currentGrid[0] && colIndex === currentGrid[1]\n                        ? \"grid-column current-grid\"\n                        : board[rowIndex][colIndex] === 1\n                        ? \"grid-column queen-grid\"\n                        : \"grid-column\"\n                    }\n                  ></div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Log Tracer */}\n      <div className=\"log-tracer\">\n        <div className=\"label\">Log Tracer</div>\n        <div className=\"content\">\n          {messages.map((message) => {\n            return <p>{message}</p>;\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default NQueens;\n","import React, { useState, useEffect, useContext } from \"react\";\n\n// Fontawesome icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n// Context\nimport { Context } from \"../../../../context/Context\";\n\nconst SumOfSubSets = () => {\n  const [array, setArray] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [firstIndex, setFirstIndex] = useState(-1);\n  const [target, setTarget] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const { speed } = useContext(Context);\n  const [solution, setSolution] = useState([]);\n\n  const generateArray = () => {\n    setCurrentIndex(-1);\n    setMessages([]);\n    setTarget(\"\");\n\n    var tempArray = [];\n    for (var i = 0; i < 10; i++) {\n      var number = Math.floor(Math.random() * 80 + 1);\n      tempArray.push(number);\n    }\n    setArray(tempArray);\n  };\n\n  // Component Did Mount\n  useEffect(() => {\n    generateArray();\n  }, []);\n\n  const sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n\n  const handleChange = (e) => {\n    setTarget(parseInt(e.target.value));\n  };\n\n  //  Solve\n  const solve = async (n, sum) => {\n    //   Log Tracer\n    setMessages((messages) => [...messages, `Searching for the sum: ${sum}`]);\n\n    setCurrentIndex(n);\n    await sleep(100);\n    if (target !== \"\") {\n      if (sum == 0) {\n        return true;\n      }\n      if (n == 0 && sum != 0) return false;\n\n      if (array[n - 1] > sum) {\n        setFirstIndex(n - 1);\n        await sleep(1000);\n        return solve(n - 1, sum, currentIndex);\n      }\n      return (\n        (await solve(n - 1, sum, currentIndex)) ||\n        (await solve(n - 1, sum - array[n - 1], currentIndex))\n      );\n    } else {\n      alert(\"Enter the sum to find\");\n    }\n  };\n\n  const execute = async () => {\n    //   Log Tracer\n    setMessages((messages) => [...messages, `Given set : ${array}`]);\n    setMessages((messages) => [...messages, `Desired Sum : ${target}`]);\n    if (await solve(array.length, target, [])) {\n      await sleep(100);\n      //   Log Tracer\n      setMessages((messages) => [...messages, `Found a Possible Solution`]);\n    } else {\n      //   Log Tracer\n      setMessages((messages) => [...messages, `No Solution found`]);\n    }\n    //   Log Tracer\n  };\n  return (\n    <div>\n      <div className=\"settings\">\n        <div className=\"content\">\n          <div className=\"left-content\">\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={generateArray}\n            >\n              <FontAwesomeIcon icon={faSyncAlt} /> Generate array\n            </span>\n            <input\n              type=\"text\"\n              focus\n              placeholder=\"Sum to be found\"\n              className=\"inputField\"\n              onChange={handleChange}\n              value={target}\n            />\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={() => execute()}\n            >\n              <FontAwesomeIcon icon={faPlay} /> Play\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"mainContent\">\n        <div className=\"node-wrapper\">\n          {array.map((value, index) => {\n            return (\n              <div\n                key={index}\n                className={\n                  index === currentIndex\n                    ? \"node currentNode\"\n                    : index === firstIndex\n                    ? \"node firstIndex\"\n                    : \"node\"\n                }\n              >\n                {value}\n              </div>\n            );\n          })}\n        </div>\n        {/* Log Tracer */}\n        <div className=\"log-tracer\">\n          <div className=\"label\">Log Tracer</div>\n          <div className=\"content\">\n            {messages.map((message) => {\n              return <p>{message}</p>;\n            })}\n            {solution}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SumOfSubSets;\n","import React, { useState, useEffect, useContext } from \"react\";\n\n// import \"./LinearSearch.css\";\n\n// Fontawesome icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n// Context\nimport { Context } from \"../../../context/Context\";\n\nconst NFactorial = () => {\n  const [array, setArray] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [messages, setMessages] = useState([]);\n  const { speed } = useContext(Context);\n\n  const generateArray = () => {\n    setCurrentIndex(-1);\n    setMessages([]);\n\n    var tempArray = [];\n    for (var i = 0; i < 15; i++) {\n      tempArray.push(0);\n    }\n    setArray(tempArray);\n  };\n\n  // Component Did Mount\n  useEffect(() => {\n    generateArray();\n  }, []);\n\n  const sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n\n  // linear Search\n  const nthFactorial = async () => {\n    var n = array.length;\n    var res = 1;\n    var tempArray = array;\n    tempArray[0] = res;\n    setCurrentIndex(0);\n    await sleep(1000);\n    setMessages((messages) => [...messages, `Set value ${res} at index ${0}`]);\n\n    setArray(tempArray);\n    for (var i = 2; i <= n; i++) {\n      res *= i;\n\n      setCurrentIndex(i - 1);\n      setMessages((messages) => [\n        ...messages,\n        `Set value ${res} at index ${i - 1}`,\n      ]);\n      await sleep(1000);\n\n      var tempArray = array;\n      tempArray[i - 1] = res;\n      setArray(tempArray);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"settings\">\n        <div className=\"content\">\n          <div className=\"left-content\">\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={() => nthFactorial()}\n            >\n              <FontAwesomeIcon icon={faPlay} /> Play\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"mainContent\">\n        <div className=\"node-wrapper\">\n          {array.map((value, index) => {\n            return (\n              <div\n                key={index}\n                className={index === currentIndex ? \"node currentNode\" : \"node\"}\n              >\n                {value}\n              </div>\n            );\n          })}\n        </div>\n        {/* Log Tracer */}\n        <div className=\"log-tracer\">\n          <div className=\"label\">Log Tracer</div>\n          <div className=\"content\">\n            {messages.map((message) => {\n              return <p>{message}</p>;\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NFactorial;\n","import React, { useState, useEffect, useContext } from \"react\";\n\n// Fontawesome icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n// Context\nimport { Context } from \"../../../../context/Context\";\n\nconst SlidingWindow = () => {\n  const [array, setArray] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [target, setTarget] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [leftIndex, setLeftIndex] = useState(-1);\n  const [rightIndex, setRightIndex] = useState(-1);\n  const { speed } = useContext(Context);\n\n  const generateArray = () => {\n    setCurrentIndex(-1);\n    setMessages([]);\n    setTarget(\"\");\n\n    var tempArray = [1, 4, 2, 10, 23, 3, 1, 0, 20];\n    // for (var i = 0; i < 15; i++) {\n    //   var number = Math.floor(Math.random() * 100 + 1);\n    //   tempArray.push(number);\n    // }\n    setArray(tempArray);\n  };\n\n  // Component Did Mount\n  useEffect(() => {\n    generateArray();\n  }, []);\n\n  const sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n\n  const handleChange = (e) => {\n    setTarget(e.target.value);\n  };\n\n  // linear Search\n  const linearSearch = async () => {\n    if (target.trim() !== \"\") {\n      var n = array.length;\n      if (n < target) {\n        // Log Tracer\n        setMessages((messages) => [...messages, \"Invalid\"]);\n        return -1;\n      }\n\n      setLeftIndex(0);\n      setRightIndex(target - 1);\n      await sleep(1000);\n\n      var maxSum = 0;\n      for (var i = 0; i < target; i++) {\n        // Log Tracer\n        setMessages((messages) => [\n          ...messages,\n          `Adding value ${array[i]} to maxSum`,\n        ]);\n        maxSum += array[i];\n      }\n\n      // Log Tracer\n      setMessages((messages) => [...messages, `Max Sum : ${maxSum}`]);\n\n      setLeftIndex(target);\n      setRightIndex(n - 1);\n      await sleep(1000);\n\n      var windowSum = maxSum;\n      for (var i = target; i < n; i++) {\n        // Log Tracer\n        setMessages((messages) => [...messages, `Window Sum : ${windowSum}`]);\n        windowSum += array[i] - array[i - target];\n        setLeftIndex(i - target);\n        setRightIndex(i - 1);\n        await sleep(1000);\n        maxSum = Math.max(maxSum, windowSum);\n        // Log Tracer\n        setMessages((messages) => [\n          ...messages,\n          `Comparing maxSum : ${maxSum} and Window Sum : ${windowSum}`,\n        ]);\n      }\n      setLeftIndex(i - target);\n      setRightIndex(n - 1);\n      await sleep(1000);\n      setLeftIndex(-1);\n      setRightIndex(-1);\n      // Log Tracer\n      setMessages((messages) => [...messages, `The maximum sum is ${maxSum}`]);\n    } else {\n      alert(\"Enter the size of the subarray to be found\");\n    }\n\n    console.log(maxSum);\n  };\n  return (\n    <div>\n      <div className=\"settings\">\n        <div className=\"content\">\n          <div className=\"left-content\">\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={generateArray}\n            >\n              <FontAwesomeIcon icon={faSyncAlt} /> Generate array\n            </span>\n            <input\n              type=\"text\"\n              focus\n              placeholder=\"Size of the subarray\"\n              className=\"inputField\"\n              onChange={handleChange}\n              value={target}\n            />\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={linearSearch}\n            >\n              <FontAwesomeIcon icon={faPlay} /> Play\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"mainContent\">\n        <div className=\"node-wrapper\">\n          {array.map((value, index) => {\n            return (\n              <div\n                key={index}\n                className={\n                  index === currentIndex\n                    ? \"node currentNode\"\n                    : index >= leftIndex && index <= rightIndex\n                    ? \"node rangeNode\"\n                    : \"node\"\n                }\n              >\n                {value}\n              </div>\n            );\n          })}\n        </div>\n        {/* Log Tracer */}\n        <div className=\"log-tracer\">\n          <div className=\"label\">Log Tracer</div>\n          <div className=\"content\">\n            {messages.map((message) => {\n              return <p>{message}</p>;\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SlidingWindow;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport \"./Quickselect.css\";\n\n// Fontawesome icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n// Context\nimport { Context } from \"../../../../context/Context\";\n\nconst QuickSelect = () => {\n  const [array, setArray] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [leftIndex, setLeftIndex] = useState(-1);\n  const [rightIndex, setRightIndex] = useState(-1);\n  const [resultIndex, setResultIndex] = useState(-1);\n  const [pivotIndex, setPivotIndex] = useState(-1);\n\n  const [target, setTarget] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const { speed } = useContext(Context);\n\n  const generateArray = () => {\n    setCurrentIndex(-1);\n    setLeftIndex(-1);\n    setRightIndex(-1);\n    setPivotIndex(-1);\n    setMessages([]);\n    setTarget(\"\");\n\n    var tempArray = [];\n    for (var i = 0; i < 15; i++) {\n      var number = Math.floor(Math.random() * 100 + 1);\n      tempArray.push(number);\n    }\n    setArray(tempArray);\n  };\n\n  // Component Did Mount\n  useEffect(() => {\n    generateArray();\n  }, []);\n\n  const sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n\n  const handleChange = (e) => {\n    setTarget(e.target.value);\n  };\n\n  // solve\n  const solve = () => {\n    if (target.trim() !== \"\") {\n      var position = parseInt(target) - 1;\n      quickSelect(0, array.length - 1, position);\n    } else {\n      alert(\"Enter the value of K\");\n    }\n  };\n\n  const quickSelect = async (startIndex, endIndex, position) => {\n    while (true) {\n      var leftIndex = startIndex + 1;\n      var rightIndex = endIndex;\n      var pivotIndex = startIndex;\n\n      setCurrentIndex(startIndex);\n      setLeftIndex(leftIndex);\n      setRightIndex(rightIndex);\n      setPivotIndex(pivotIndex);\n      await sleep(1000);\n\n      // Log tracer\n      setMessages((messages) => [...messages, `Start Index ${startIndex}`]);\n      setMessages((messages) => [...messages, `Left Index ${leftIndex}`]);\n      setMessages((messages) => [...messages, `Right Index ${rightIndex}`]);\n      setMessages((messages) => [...messages, `Pivot Index ${pivotIndex}`]);\n\n      while (leftIndex <= rightIndex) {\n        if (\n          array[leftIndex] > array[pivotIndex] &&\n          array[rightIndex] < array[pivotIndex]\n        ) {\n          setMessages((messages) => [\n            ...messages,\n            `Swapping left and right index`,\n          ]);\n\n          swap(leftIndex, rightIndex);\n        }\n\n        if (array[leftIndex] <= array[pivotIndex]) {\n          leftIndex++;\n          setLeftIndex(leftIndex);\n          setMessages((messages) => [...messages, `Left Index ${leftIndex}`]);\n          await sleep(1000);\n        }\n        if (array[rightIndex] >= array[pivotIndex]) {\n          rightIndex--;\n          setRightIndex(rightIndex);\n          setMessages((messages) => [...messages, `Right Index ${rightIndex}`]);\n          await sleep(1000);\n        }\n      }\n      setMessages((messages) => [\n        ...messages,\n        `Swapping pivot and right index`,\n      ]);\n      swap(pivotIndex, rightIndex);\n      if (rightIndex === position) {\n        console.log(array[rightIndex]);\n        setResultIndex(rightIndex);\n        setMessages((messages) => [\n          ...messages,\n          `Element : ${array[rightIndex]} (found at ${rightIndex})`,\n        ]);\n        setLeftIndex(-1);\n        setRightIndex(-1);\n        setCurrentIndex(-1);\n        break;\n      } else if (rightIndex < position) startIndex = rightIndex + 1;\n      else endIndex = rightIndex - 1;\n    }\n  };\n\n  const swap = (left, right) => {\n    var tempArray = array;\n    var temp = tempArray[left];\n    tempArray[left] = tempArray[right];\n    tempArray[right] = temp;\n    setArray(tempArray);\n  };\n  return (\n    <div>\n      <div className=\"settings\">\n        <div className=\"content\">\n          <div className=\"left-content\">\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={generateArray}\n            >\n              <FontAwesomeIcon icon={faSyncAlt} /> Generate array\n            </span>\n            <input\n              type=\"text\"\n              focus\n              placeholder=\"Value of K\"\n              className=\"inputField\"\n              onChange={handleChange}\n              value={target}\n            />\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={solve}\n            >\n              <FontAwesomeIcon icon={faPlay} /> Play\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"mainContent\">\n        <div className=\"node-wrapper\">\n          {array.map((value, index) => {\n            return (\n              <div\n                key={index}\n                className={\n                  index === currentIndex\n                    ? \"node currentNode\"\n                    : index === leftIndex\n                    ? \"node leftIndex\"\n                    : index === rightIndex\n                    ? \"node rightIndex\"\n                    : index === resultIndex\n                    ? \"node resultIndex\"\n                    : \"node\"\n                }\n              >\n                {value}\n              </div>\n            );\n          })}\n        </div>\n        {/* Log Tracer */}\n        <div className=\"log-tracer\">\n          <div className=\"label\">Log Tracer</div>\n          <div className=\"content\">\n            {messages.map((message) => {\n              return <p>{message}</p>;\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuickSelect;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport \"./BubbleSort.css\";\n\n// Fontawesome icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n// Context\nimport { Context } from \"../../../../context/Context\";\n\nconst LinearSearch = () => {\n  const [array, setArray] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [leftIndex, setLeftIndex] = useState(-1);\n  const [rightIndex, setRightIndex] = useState(-1);\n  const [messages, setMessages] = useState([]);\n  const { speed } = useContext(Context);\n\n  const generateArray = () => {\n    setCurrentIndex(-1);\n    setMessages([]);\n\n    var tempArray = [];\n    for (var i = 0; i < 15; i++) {\n      var number = Math.floor(Math.random() * 100 + 1);\n      tempArray.push(number);\n    }\n    setArray(tempArray);\n  };\n\n  // Component Did Mount\n  useEffect(() => {\n    generateArray();\n  }, []);\n\n  const sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n\n  // bubble sort\n  const bubbleSort = async () => {\n    for (var i = 0; i < array.length; i++) {\n      for (var j = 0; j < array.length - i - 1; j++) {\n        // Log\n        setMessages((messages) => [\n          ...messages,\n          `Comparing values at index ${j} and ${j + 1}`,\n        ]);\n\n        if (array[j] > array[j + 1]) {\n          // Log\n          setMessages((messages) => [\n            ...messages,\n            `Swapping values at index ${j} and ${j + 1}`,\n          ]);\n          var tempArray = array;\n          var temp = tempArray[j];\n          tempArray[j] = tempArray[j + 1];\n          tempArray[j + 1] = temp;\n          setLeftIndex(j);\n          setRightIndex(j + 1);\n          await sleep(200);\n          setArray(tempArray);\n        }\n        var tempArray = array;\n        setArray(tempArray);\n      }\n      var tempArray = array;\n      setArray(tempArray);\n      // Log\n      setMessages((messages) => [...messages, `Array Sorted!!`]);\n      setLeftIndex(-1);\n      setRightIndex(-1);\n    }\n  };\n  console.log(array);\n  return (\n    <div>\n      <div className=\"settings\">\n        <div className=\"content\">\n          <div className=\"left-content\">\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={generateArray}\n            >\n              <FontAwesomeIcon icon={faSyncAlt} /> Generate array\n            </span>\n\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={bubbleSort}\n            >\n              <FontAwesomeIcon icon={faPlay} /> Play\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"mainContent\">\n        <div className=\"node-wrapper\">\n          <div className=\"bars\">\n            {array.map((value, index) => {\n              return (\n                <div\n                  title={value}\n                  style={{ height: array[index], width: 20 }}\n                  key={index}\n                  className={\n                    index === currentIndex\n                      ? \"bar currentNode\"\n                      : index === leftIndex\n                      ? \"bar leftBar\"\n                      : index === rightIndex\n                      ? \"bar rightBar\"\n                      : \"bar\"\n                  }\n                >\n                  {/* {value} */}\n                </div>\n              );\n            })}\n          </div>\n\n          <div className=\"nodes\">\n            {array.map((value, index) => {\n              return (\n                <div\n                  key={index}\n                  className={\n                    index === currentIndex\n                      ? \"node currentNode\"\n                      : index === leftIndex\n                      ? \"node leftIndex\"\n                      : index === rightIndex\n                      ? \"node rightIndex\"\n                      : \"node\"\n                  }\n                >\n                  {value}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        {/* Log Tracer */}\n        <div className=\"log-tracer\">\n          <div className=\"label\">Log Tracer</div>\n          <div className=\"content\">\n            {messages.map((message) => {\n              return <p>{message}</p>;\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LinearSearch;\n","import React, { useState, useContext } from \"react\";\n\n// Stylesheet\nimport \"./Content.css\";\n\n// Context\nimport { Context } from \"../../context/Context\";\n\n// Algorithms\nimport LinearSearch from \"../Algorithms/Search/LinearSearch/LinearSearch\";\nimport BinarySearch from \"../Algorithms/Search/BinarySearch/BinarySearch\";\nimport JumpSearch from \"../Algorithms/Search/JumpSearch/JumpSearch\";\nimport Fibonacci from \"../Algorithms/DynamicProgramming/Fibonacci/Fibonacci\";\nimport NQueens from \"../Algorithms/Backtracking/NQueens/NQueens\";\nimport SumOfSubSets from \"../Algorithms/Backtracking/SumOfSubSets/SumOfSubsets\";\nimport NFactorial from \"../Algorithms/Recursion/NFactorial\";\nimport SlidingWindow from \"../Algorithms/DynamicProgramming/SlidingWindow/SlidingWindow\";\nimport QuickSelect from \"../Algorithms/Search/QuickSelect/QuickSelect\";\nimport BubbleSort from \"../Algorithms/Sorting/BubbleSort/BubbleSort\";\n\n// CodeString\n// CPP\nimport {\n  LinearSearchCPP,\n  BinarySearchCPP,\n  JumpSearchCPP,\n  FibonacciCPP,\n  NQueensCPP,\n  SumOfSubsetsCPP,\n  NFactorialCPP,\n  SlidingWindowCPP,\n  QuickSelectCPP,\n  BubbleSortCPP,\n} from \"../CodeStrings/CodeStringsCPP\";\n\nimport {\n  LinearSearchPY,\n  BinarySearchPY,\n  JumpSearchPY,\n  FibonacciPY,\n  NQueensPY,\n  SumOfSubSstsPY,\n  NFactorialPY,\n  SlidingWindowPY,\n  QuickSelectPY,\n  BubbleSortPY,\n} from \"../CodeStrings/CodeStringsPY\";\n\n// Code Themes\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { atomDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nconst Content = () => {\n  const { selectedComponent } = useContext(Context);\n  const [language, setLanguage] = useState(\"CPP\");\n\n  // Mappings\n  const components = {\n    LinearSearch: LinearSearch,\n    BinarySearch: BinarySearch,\n    JumpSearch: JumpSearch,\n    Fibonacci: Fibonacci,\n    NQueens: NQueens,\n    SumOfSubsets: SumOfSubSets,\n    NFactorial: NFactorial,\n    SlidingWindow: SlidingWindow,\n    QuickSelect: QuickSelect,\n    BubbleSort: BubbleSort,\n  };\n  const codeStringsMappingCPP = {\n    LinearSearch: LinearSearchCPP,\n    BinarySearch: BinarySearchCPP,\n    JumpSearch: JumpSearchCPP,\n    Fibonacci: FibonacciCPP,\n    NQueens: NQueensCPP,\n    SumOfSubsets: SumOfSubsetsCPP,\n    NFactorial: NFactorialCPP,\n    SlidingWindow: SlidingWindowCPP,\n    QuickSelect: QuickSelectCPP,\n    BubbleSort: BubbleSortCPP,\n  };\n  const codeStringsMappingPY = {\n    LinearSearch: LinearSearchPY,\n    BinarySearch: BinarySearchPY,\n    JumpSearch: JumpSearchPY,\n    Fibonacci: FibonacciPY,\n    NQueens: NQueensPY,\n    SumOfSubsets: SumOfSubSstsPY,\n    NFactorial: NFactorialPY,\n    SlidingWindow: SlidingWindowPY,\n    QuickSelect: QuickSelectPY,\n    BubbleSort: BubbleSortPY,\n  };\n\n  var Component = components[selectedComponent];\n  var codeString;\n\n  if (language === \"CPP\") {\n    codeString = codeStringsMappingCPP[selectedComponent];\n  } else {\n    codeString = codeStringsMappingPY[selectedComponent];\n  }\n\n  return (\n    <div className=\"root\">\n      <div className=\"row\">\n        <div className=\"column\" id=\"main-content-column\">\n          <div className=\"main-content\">\n            <div>\n              <Component />\n            </div>\n          </div>\n        </div>\n        <div className=\"column\" id=\"code\">\n          <div className=\"code\">\n            <div>\n              <span\n                className=\"label lang-selector\"\n                onClick={() => setLanguage(\"CPP\")}\n              >\n                <span>C++</span>\n              </span>\n              <span\n                className=\"label lang-selector\"\n                onClick={() => setLanguage(\"PY\")}\n              >\n                <span>Python</span>\n              </span>\n            </div>\n            <SyntaxHighlighter\n              language={language === \"CPP\" ? \"cpp\" : \"py\"}\n              style={atomDark}\n              customStyle={{ fontSize: 12 }}\n            >\n              {codeString}\n            </SyntaxHighlighter>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Content;\n","export const LinearSearchCPP = `\n#include<bits/stdc++.h>\nusing namespace std;\n\nint linearSearch(vector<int> array, int target){\n    for(int i = 0; i < n; i++){\n        if(array[i] == target) return i;\n    }\n    return -1;\n}\n\nint main(){\n    vector<int> array = {45, 22, 68, 99, 100 ,120};\n    int target = 45;    \n    cout << linearSearch(array, target) << endl;\n    return 0;\n}\n`;\n\nexport const BinarySearchCPP = `\n#include<bits/stdc++.h>\nusing namespace std;\n\nint binarySearch(vector<int> array, int target){\n    int left = 0;\n    int right = array.size() - 1;\n\n    while(left <= right){\n        int mid = left + (right - left) / 2;\n        if(array[mid] == target) return mid;\n        else if (array[mid] < target) left = mid + 1;\n        else right = mid - 1;\n    }\n    return -1;\n}\n\nint main(){\n    vector<int> array = {1, 2, 3, 4, 5, 6, 7, 8};\n    int target = 7;\n    cout << binarySearch(array, target) << endl;\n    return 0;\n}\n\n`;\n\nexport const JumpSearchCPP = `\n#include<bits/stdc++.h>\nusing namespace std;\n\nint jumpSearch(vector<int> array, int target){\n    int step = sqrt(n); \n  \n    int prev = 0; \n    while (arr[min(step, n)-1] < x) \n    { \n        prev = step; \n        step += sqrt(n); \n        if (prev >= n) \n            return -1; \n    } \n  \n    while (arr[prev] < x) \n    { \n        prev++; \n  \n         \n        if (prev == min(step, n)) \n            return -1; \n    } \n  \n    if (arr[prev] == x) \n        return prev; \n  \n    return -1; \n}\n\nint main(){\n    vector<int> array = {1, 2, 3, 4, 5, 6, 7, 8};\n    int target = 7;\n    cout << jumpSearch(array, target) << endl;\n    return 0;\n}\n\n`;\n\n// DP\nexport const FibonacciCPP = `\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n = 15;\nvector<int> dp(n);\ndp[0] = 0;\ndp[1] = 1;\nvoid generateFibonacci(vector<int> dp){\n    for(int i = 2; i < n; i++){\n        dp[i] = dp[i - 1] + dp[i - 2];\n    }\n\n    // Print values\n    for(int x : dp) cout << x << endl;\n}\n\nint main(){\n    generateFibonacci(array);\n    return 0;\n}\n\n`;\n\n// Backtracking\nexport const NQueensCPP = `\n/* C/C++ program to solve N Queen Problem using \n   backtracking */\n#define N 4 \n#include <stdbool.h> \n#include <stdio.h> \n  \n/* A utility function to print solution */\nvoid printSolution(int board[N][N]) \n{ \n    for (int i = 0; i < N; i++) { \n        for (int j = 0; j < N; j++) \n            printf(\" %d \", board[i][j]); \n        printf(\"\\n\"); \n    } \n} \n  \n/* A utility function to check if a queen can \n   be placed on board[row][col]. Note that this \n   function is called when \"col\" queens are \n   already placed in columns from 0 to col -1. \n   So we need to check only left side for \n   attacking queens */\nbool isSafe(int board[N][N], int row, int col) \n{ \n    int i, j; \n  \n    /* Check this row on left side */\n    for (i = 0; i < col; i++) \n        if (board[row][i]) \n            return false; \n  \n    /* Check upper diagonal on left side */\n    for (i = row, j = col; i >= 0 && j >= 0; i--, j--) \n        if (board[i][j]) \n            return false; \n  \n    /* Check lower diagonal on left side */\n    for (i = row, j = col; j >= 0 && i < N; i++, j--) \n        if (board[i][j]) \n            return false; \n  \n    return true; \n} \n  \n/* A recursive utility function to solve N \n   Queen problem */\nbool solveNQUtil(int board[N][N], int col) \n{ \n    /* base case: If all queens are placed \n      then return true */\n    if (col >= N) \n        return true; \n  \n    /* Consider this column and try placing \n       this queen in all rows one by one */\n    for (int i = 0; i < N; i++) { \n        /* Check if the queen can be placed on \n          board[i][col] */\n        if (isSafe(board, i, col)) { \n            /* Place this queen in board[i][col] */\n            board[i][col] = 1; \n  \n            /* recur to place rest of the queens */\n            if (solveNQUtil(board, col + 1)) \n                return true; \n  \n            /* If placing queen in board[i][col] \n               doesn't lead to a solution, then \n               remove queen from board[i][col] */\n            board[i][col] = 0; // BACKTRACK \n        } \n    } \n  \n    /* If the queen cannot be placed in any row in \n        this colum col  then return false */\n    return false; \n} \n  \n/* This function solves the N Queen problem using \n   Backtracking. It mainly uses solveNQUtil() to  \n   solve the problem. It returns false if queens \n   cannot be placed, otherwise, return true and \n   prints placement of queens in the form of 1s. \n   Please note that there may be more than one \n   solutions, this function prints one  of the \n   feasible solutions.*/\nbool solveNQ() \n{ \n    int board[N][N] = { { 0, 0, 0, 0 }, \n                        { 0, 0, 0, 0 }, \n                        { 0, 0, 0, 0 }, \n                        { 0, 0, 0, 0 } }; \n  \n    if (solveNQUtil(board, 0) == false) { \n        printf(\"Solution does not exist\"); \n        return false; \n    } \n  \n    printSolution(board); \n    return true; \n} \n  \n// driver program to test above function \nint main() \n{ \n    solveNQ(); \n    return 0; \n} \n`;\n\nexport const SumOfSubsetsCPP = `\n// A recursive solution for subset sum problem \n#include <stdio.h> \n\n// Returns true if there is a subset \n// of set[] with sum equal to given sum \nbool isSubsetSum(int set[], int n, int sum) \n{ \n\t// Base Cases \n\tif (sum == 0) \n\t\treturn true; \n\tif (n == 0 && sum != 0) \n\t\treturn false; \n\n\t// If last element is greater than sum, \n\t// then ignore it \n\tif (set[n - 1] > sum) \n\t\treturn isSubsetSum(set, n - 1, sum); \n\n\t/* else, check if sum can be obtained by any \nof the following: \n\t(a) including the last element \n\t(b) excluding the last element */\n\treturn isSubsetSum(set, n - 1, sum) \n\t\t|| isSubsetSum(set, n - 1, sum - set[n - 1]); \n} \n\n// Driver program to test above function \nint main() \n{ \n\tint set[] = { 3, 34, 4, 12, 5, 2 }; \n\tint sum = 9; \n\tint n = sizeof(set) / sizeof(set[0]); \n\tif (isSubsetSum(set, n, sum) == true) \n\t\tprintf(\"Found a subset with given sum\"); \n\telse\n\t\tprintf(\"No subset with given sum\"); \n\treturn 0; \n} \n`;\n\nexport const NFactorialCPP = `\n// C++ program to find factorial of given number \n#include <iostream> \nusing namespace std; \n\n// function to find factorial of given number \nunsigned int factorial(unsigned int n) \n{ \n\tif (n == 0) \n\t\treturn 1; \n\treturn n * factorial(n - 1); \n} \n\n// Driver code \nint main() \n{ \n\tint num = 5; \n\tcout << \"Factorial of \"\n\t\t<< num << \" is \" << factorial(num) << endl; \n\treturn 0; \n} \n\n`;\nexport const SlidingWindowCPP = `\n// O(n*k) solution for finding maximum sum of \n// a subarray of size k \n#include <bits/stdc++.h> \nusing namespace std; \n\n// Returns maximum sum in a subarray of size k. \nint maxSum(int arr[], int n, int k) \n{ \n\t// Initialize result \n\tint max_sum = INT_MIN; \n\n\t// Consider all blocks starting with i. \n\tfor (int i = 0; i < n - k + 1; i++) { \n\t\tint current_sum = 0; \n\t\tfor (int j = 0; j < k; j++) \n\t\t\tcurrent_sum = current_sum + arr[i + j]; \n\n\t\t// Update result if required. \n\t\tmax_sum = max(current_sum, max_sum); \n\t} \n\n\treturn max_sum; \n} \n\n// Driver code \nint main() \n{ \n\tint arr[] = { 1, 4, 2, 10, 2, 3, 1, 0, 20 }; \n\tint k = 4; \n\tint n = sizeof(arr) / sizeof(arr[0]); \n\tcout << maxSum(arr, n, k); \n\treturn 0; \n} \n`;\n\nexport const QuickSelectCPP = `\n// CPP program for implementation of QuickSelect \n#include <bits/stdc++.h> \nusing namespace std; \n\n// Standard partition process of QuickSort(). \n// It considers the last element as pivot \n// and moves all smaller element to left of \n// it and greater elements to right \nint partition(int arr[], int l, int r) \n{ \n\tint x = arr[r], i = l; \n\tfor (int j = l; j <= r - 1; j++) { \n\t\tif (arr[j] <= x) { \n\t\t\tswap(arr[i], arr[j]); \n\t\t\ti++; \n\t\t} \n\t} \n\tswap(arr[i], arr[r]); \n\treturn i; \n} \n\n// This function returns k'th smallest \n// element in arr[l..r] using QuickSort \n// based method. ASSUMPTION: ALL ELEMENTS \n// IN ARR[] ARE DISTINCT \nint kthSmallest(int arr[], int l, int r, int k) \n{ \n\t// If k is smaller than number of \n\t// elements in array \n\tif (k > 0 && k <= r - l + 1) { \n\n\t\t// Partition the array around last \n\t\t// element and get position of pivot \n\t\t// element in sorted array \n\t\tint index = partition(arr, l, r); \n\n\t\t// If position is same as k \n\t\tif (index - l == k - 1) \n\t\t\treturn arr[index]; \n\n\t\t// If position is more, recur \n\t\t// for left subarray \n\t\tif (index - l > k - 1) \n\t\t\treturn kthSmallest(arr, l, index - 1, k); \n\n\t\t// Else recur for right subarray \n\t\treturn kthSmallest(arr, index + 1, r, \n\t\t\t\t\t\t\tk - index + l - 1); \n\t} \n\n\t// If k is more than number of \n\t// elements in array \n\treturn INT_MAX; \n} \n\n// Driver program to test above methods \nint main() \n{ \n\tint arr[] = { 10, 4, 5, 8, 6, 11, 26 }; \n\tint n = sizeof(arr) / sizeof(arr[0]); \n\tint k = 3; \n\tcout << \"K-th smallest element is \"\n\t\t<< kthSmallest(arr, 0, n - 1, k); \n\treturn 0; \n} \n`;\n\nexport const BubbleSortCPP = `\n// C++ program for implementation of Bubble sort \n#include <bits/stdc++.h> \nusing namespace std; \n\nvoid swap(int *xp, int *yp) \n{ \n\tint temp = *xp; \n\t*xp = *yp; \n\t*yp = temp; \n} \n\n// A function to implement bubble sort \nvoid bubbleSort(int arr[], int n) \n{ \n\tint i, j; \n\tfor (i = 0; i < n-1; i++)\t \n\t\n\t// Last i elements are already in place \n\tfor (j = 0; j < n-i-1; j++) \n\t\tif (arr[j] > arr[j+1]) \n\t\t\tswap(&arr[j], &arr[j+1]); \n} \n\n/* Function to print an array */\nvoid printArray(int arr[], int size) \n{ \n\tint i; \n\tfor (i = 0; i < size; i++) \n\t\tcout << arr[i] << \" \"; \n\tcout << endl; \n} \n\n// Driver code \nint main() \n{ \n\tint arr[] = {64, 34, 25, 12, 22, 11, 90}; \n\tint n = sizeof(arr)/sizeof(arr[0]); \n\tbubbleSort(arr, n); \n\tcout<<\"Sorted array: \\n\"; \n\tprintArray(arr, n); \n\treturn 0; \n} \n`;\n","export const LinearSearchPY = `\n# Python3 code to linearly search x in arr[].  \n# If x is present then return its location, \n# otherwise return -1 \n  \ndef search(arr, n, x): \n  \n    for i in range (0, n): \n        if (arr[i] == x): \n            return i; \n    return -1; \n  \n# Driver Code \narr = [ 2, 3, 4, 10, 40 ]; \nx = 10; \nn = len(arr); \nresult = search(arr, n, x) \nif(result == -1): \n    print(\"Element is not present in array\") \nelse: \n    print(\"Element is present at index\", result); \n`;\n\nexport const BinarySearchPY = `\n# Python3 code to implement iterative Binary  \n# Search. \n  \n# It returns location of x in given array arr  \n# if present, else returns -1 \ndef binarySearch(arr, l, r, x): \n  \n    while l <= r: \n  \n        mid = l + (r - l) // 2; \n          \n        # Check if x is present at mid \n        if arr[mid] == x: \n            return mid \n  \n        # If x is greater, ignore left half \n        elif arr[mid] < x: \n            l = mid + 1\n  \n        # If x is smaller, ignore right half \n        else: \n            r = mid - 1\n      \n    # If we reach here, then the element \n    # was not present \n    return -1\n  \n# Driver Code \narr = [ 2, 3, 4, 10, 40 ] \nx = 10\n  \n# Function call \nresult = binarySearch(arr, 0, len(arr)-1, x) \n  \nif result != -1: \n    print (\"Element is present at index % d\" % result) \nelse: \n    print (\"Element is not present in array\") \n`;\n\nexport const JumpSearchPY = `\n# Python3 code to implement Jump Search \nimport math \n  \ndef jumpSearch( arr , x , n ): \n      \n    # Finding block size to be jumped \n    step = math.sqrt(n) \n      \n    # Finding the block where element is \n    # present (if it is present) \n    prev = 0\n    while arr[int(min(step, n)-1)] < x: \n        prev = step \n        step += math.sqrt(n) \n        if prev >= n: \n            return -1\n      \n    # Doing a linear search for x in  \n    # block beginning with prev. \n    while arr[int(prev)] < x: \n        prev += 1\n          \n        # If we reached next block or end  \n        # of array, element is not present. \n        if prev == min(step, n): \n            return -1\n      \n    # If element is found \n    if arr[int(prev)] == x: \n        return prev \n      \n    return -1\n  \n# Driver code to test function \narr = [ 0, 1, 1, 2, 3, 5, 8, 13, 21, \n    34, 55, 89, 144, 233, 377, 610 ] \nx = 55\nn = len(arr) \n  \n# Find the index of 'x' using Jump Search \nindex = jumpSearch(arr, x, n) \n  \n# Print the index where 'x' is located \nprint(\"Number\" , x, \"is at index\" ,\"%.0f\"%index) \n`;\n\nexport const FibonacciPY = `\nFibArray = [0,1] \n  \ndef fibonacci(n): \n    if n < 0: \n        print(\"Incorrect input\") \n    elif n <= len(FibArray): \n        return FibArray[n-1] \n    else: \n        temp_fib = fibonacci(n-1) + fibonacci(n-2) \n        FibArray.append(temp_fib) \n        return temp_fib \n  \n# Driver Program \n  \nprint(fibonacci(9)) \n`;\n\nexport const NQueensPY = `\n# Python3 program to solve N Queen \n# Problem using backtracking \nglobal N \nN = 4\n\ndef printSolution(board): \n\tfor i in range(N): \n\t\tfor j in range(N): \n\t\t\tprint (board[i][j], end = \" \") \n\t\tprint() \n\n# A utility function to check if a queen can \n# be placed on board[row][col]. Note that this \n# function is called when \"col\" queens are \n# already placed in columns from 0 to col -1. \n# So we need to check only left side for \n# attacking queens \ndef isSafe(board, row, col): \n\n\t# Check this row on left side \n\tfor i in range(col): \n\t\tif board[row][i] == 1: \n\t\t\treturn False\n\n\t# Check upper diagonal on left side \n\tfor i, j in zip(range(row, -1, -1), \n\t\t\t\t\trange(col, -1, -1)): \n\t\tif board[i][j] == 1: \n\t\t\treturn False\n\n\t# Check lower diagonal on left side \n\tfor i, j in zip(range(row, N, 1), \n\t\t\t\t\trange(col, -1, -1)): \n\t\tif board[i][j] == 1: \n\t\t\treturn False\n\n\treturn True\n\ndef solveNQUtil(board, col): \n\t\n\t# base case: If all queens are placed \n\t# then return true \n\tif col >= N: \n\t\treturn True\n\n\t# Consider this column and try placing \n\t# this queen in all rows one by one \n\tfor i in range(N): \n\n\t\tif isSafe(board, i, col): \n\t\t\t\n\t\t\t# Place this queen in board[i][col] \n\t\t\tboard[i][col] = 1\n\n\t\t\t# recur to place rest of the queens \n\t\t\tif solveNQUtil(board, col + 1) == True: \n\t\t\t\treturn True\n\n\t\t\t# If placing queen in board[i][col \n\t\t\t# doesn't lead to a solution, then \n\t\t\t# queen from board[i][col] \n\t\t\tboard[i][col] = 0\n\n\t# if the queen can not be placed in any row in \n\t# this colum col then return false \n\treturn False\n\n# This function solves the N Queen problem using \n# Backtracking. It mainly uses solveNQUtil() to \n# solve the problem. It returns false if queens \n# cannot be placed, otherwise return true and \n# placement of queens in the form of 1s. \n# note that there may be more than one \n# solutions, this function prints one of the \n# feasible solutions. \ndef solveNQ(): \n\tboard = [ [0, 0, 0, 0], \n\t\t\t[0, 0, 0, 0], \n\t\t\t[0, 0, 0, 0], \n\t\t\t[0, 0, 0, 0] ] \n\n\tif solveNQUtil(board, 0) == False: \n\t\tprint (\"Solution does not exist\") \n\t\treturn False\n\n\tprintSolution(board) \n\treturn True\n\n# Driver Code \nsolveNQ() \n\n# This code is contributed by Divyanshu Mehta \n\n`;\n\nexport const SumOfSubSstsPY = `\n# A recursive solution for subset sum \n# problem \n\n# Returns true if there is a subset \n# of set[] with sun equal to given sum \ndef isSubsetSum(set, n, sum) : \n\t\n\t# Base Cases \n\tif (sum == 0) : \n\t\treturn True\n\tif (n == 0 and sum != 0) : \n\t\treturn False\n\n\t# If last element is greater than \n\t# sum, then ignore it \n\tif (set[n - 1] > sum) : \n\t\treturn isSubsetSum(set, n - 1, sum); \n\n\t# else, check if sum can be obtained \n\t# by any of the following \n\t# (a) including the last element \n\t# (b) excluding the last element \n\treturn isSubsetSum( \nset, n-1, sum) or isSubsetSum( \nset, n-1, sum-set[n-1]) \n\t\n\t\n# Driver program to test above function \nset = [3, 34, 4, 12, 5, 2] \nsum = 9\nn = len(set) \nif (isSubsetSum(set, n, sum) == True) : \n\tprint(\"Found a subset with given sum\") \nelse : \n\tprint(\"No subset with given sum\") \n\t\n# This code is contributed by Nikita Tiwari. \n`;\n\nexport const NFactorialPY = `\n# Python 3 program to find \n# factorial of given number \n\n# Function to find factorial of given number \ndef factorial(n): \n\t\n\tif n == 0: \n\t\treturn 1\n\t\n\treturn n * factorial(n-1) \n\n# Driver Code \nnum = 5; \nprint(\"Factorial of\", num, \"is\", \nfactorial(num)) \n`;\nexport const SlidingWindowPY = `\n# O(n * k) solution for finding \n# maximum sum of a subarray of size k \nimport sys \nINT_MIN = -sys.maxsize -1\n\n# Returns maximum sum in a \n# subarray of size k. \ndef maxSum(arr, n, k): \n\t\n\t# Initialize result \n\tmax_sum = INT_MIN \n\n\t# Consider all blocks \n\t# starting with i. \n\tfor i in range(n - k + 1): \n\t\tcurrent_sum = 0\n\t\tfor j in range(k): \n\t\t\tcurrent_sum = current_sum + arr[i + j] \n\n\t\t# Update result if required. \n\t\tmax_sum = max(current_sum, max_sum ) \n\n\treturn max_sum \n\n# Driver code \narr = [1, 4, 2, 10, 2, \n\t\t3, 1, 0, 20] \nk = 4\nn = len(arr) \nprint(maxSum(arr, n, k)) \n`;\n\nexport const QuickSelectPY = `\n# Python3 program of Quick Select \n\n# Standard partition process of QuickSort(). \n# It considers the last element as pivot \n# and moves all smaller element to left of \n# it and greater elements to right \ndef partition(arr, l, r): \n\t\n\tx = arr[r] \n\ti = l \n\tfor j in range(l, r): \n\t\t\n\t\tif arr[j] <= x: \n\t\t\tarr[i], arr[j] = arr[j], arr[i] \n\t\t\ti += 1\n\t\t\t\n\tarr[i], arr[r] = arr[r], arr[i] \n\treturn i \n\n# finds the kth position (of the sorted array) \n# in a given unsorted array i.e this function \n# can be used to find both kth largest and \n# kth smallest element in the array. \n# ASSUMPTION: all elements in arr[] are distinct \ndef kthSmallest(arr, l, r, k): \n\n\t# if k is smaller than number of \n\t# elements in array \n\tif (k > 0 and k <= r - l + 1): \n\n\t\t# Partition the array around last \n\t\t# element and get position of pivot \n\t\t# element in sorted array \n\t\tindex = partition(arr, l, r) \n\n\t\t# if position is same as k \n\t\tif (index - l == k - 1): \n\t\t\treturn arr[index] \n\n\t\t# If position is more, recur \n\t\t# for left subarray \n\t\tif (index - l > k - 1): \n\t\t\treturn kthSmallest(arr, l, index - 1, k) \n\n\t\t# Else recur for right subarray \n\t\treturn kthSmallest(arr, index + 1, r, \n\t\t\t\t\t\t\tk - index + l - 1) \n\treturn INT_MAX \n\n# Driver Code \narr = [ 10, 4, 5, 8, 6, 11, 26 ] \nn = len(arr) \nk = 3\nprint(\"K-th smallest element is \", end = \"\") \nprint(kthSmallest(arr, 0, n - 1, k)) \n\n`;\n\nexport const BubbleSortPY = `\n# Python program for implementation of Bubble Sort \n\ndef bubbleSort(arr): \n\tn = len(arr) \n\n\t# Traverse through all array elements \n\tfor i in range(n): \n\n\t\t# Last i elements are already in place \n\t\tfor j in range(0, n-i-1): \n\n\t\t\t# traverse the array from 0 to n-i-1 \n\t\t\t# Swap if the element found is greater \n\t\t\t# than the next element \n\t\t\tif arr[j] > arr[j+1] : \n\t\t\t\tarr[j], arr[j+1] = arr[j+1], arr[j] \n\n# Driver code to test above \narr = [64, 34, 25, 12, 22, 11, 90] \n\nbubbleSort(arr) \n\nprint (\"Sorted array is:\") \nfor i in range(len(arr)): \n\tprint (\"%d\" %arr[i]), \n\n`;\n","import React from \"react\";\n\n\n// Stylesheet\nimport \"./App.css\";\n\n// Components\nimport Header from \"./components/Header/Header\";\nimport Content from \"./components/Content/Content\";\n\n// Context\nimport Context from \"./context/Context\";\n\nconst App = () => {\n  return (\n    <div>\n      <Context>\n        <div>\n          <Header />\n          <Content />\n        </div>\n      </Context>\n    </div>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
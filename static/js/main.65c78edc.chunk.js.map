{"version":3,"sources":["context/Context.js","components/Header/Header.js","components/Algorithms/Search/LinearSearch/LinearSearch.js","components/Algorithms/Search/BinarySearch/BinarySearch.js","components/Content/Content.js","components/CodeStrings/CodeStrings.js","App.js","serviceWorker.js","index.js"],"names":["Context","createContext","ContextProvider","props","useState","selectedComponent","setSelectedComponent","speed","setSpeed","Provider","value","children","Header","useContext","name","subCategories","menu","selectedIndex","setSelectedIndex","className","icon","faHeart","href","target","style","paddingTop","faCode","faStar","faTachometerAlt","id","type","min","max","step","onChange","e","map","menuItem","index","key","onClick","toggle","faChevronDown","faChevronRight","subCategory","LinearSearch","array","setArray","currentIndex","setCurrentIndex","setTarget","messages","setMessages","generateArray","tempArray","i","number","Math","floor","random","push","useEffect","sleep","milliseconds","Promise","resolve","setTimeout","linearSearch","a","trim","length","parseInt","alert","faSyncAlt","focus","placeholder","faPlay","message","BinarySearch","leftIndex","setLeftIndex","rightIndex","setRightIndex","binarySearch","left","right","mid","Content","Component","codeString","language","atomDark","customStyle","fontSize","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"+LAEaA,EAAUC,0BAeRC,EAbS,SAACC,GAAW,IAAD,EACiBC,mBAAS,gBAD1B,mBAC1BC,EAD0B,KACPC,EADO,OAEPF,mBAAS,KAFF,mBAE1BG,EAF0B,KAEnBC,EAFmB,KAIjC,OACE,kBAACR,EAAQS,SAAT,CACEC,MAAO,CAAEL,oBAAmBC,uBAAsBC,QAAOC,aAExDL,EAAMQ,WCoJEC,EAzIA,WAAO,IAAD,EACSC,qBAAWb,GAA/BO,EADW,EACXA,MAAOC,EADI,EACJA,SACPF,EAAyBO,qBAAWb,GAApCM,qBAFW,EAGKF,mBAAS,CAC/B,CACEU,KAAM,eACNC,cAAe,CACb,CACED,KAAM,qBACNJ,MAAO,sBAIb,CACEI,KAAM,mBACNC,cAAe,CACb,CACED,KAAM,gBACNJ,MAAO,kBAIb,CACEI,KAAM,sBACNC,cAAe,CACb,CACED,KAAM,YACNJ,MAAO,eAIb,CACEI,KAAM,YACNC,cAAe,CACb,CACED,KAAM,gBACNJ,MAAO,oBApCI,mBAGZM,EAHY,aAyCuBZ,oBAAU,IAzCjC,mBAyCZa,EAzCY,KAyCGC,EAzCH,KAkDnB,OACE,6BACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,SAAf,wBACA,yBAAKA,UAAU,aAAf,aACY,kBAAC,IAAD,CAAiBC,KAAMC,MADnC,MACkD,IAChD,uBACEC,KAAK,uCACLC,OAAO,SACPJ,UAAU,gBAHZ,oBASJ,yBAAKA,UAAU,WAAWK,MAAO,CAAEC,WAAY,IAC7C,yBAAKN,UAAU,WACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,6CACd,kBAAC,IAAD,CAAiBC,KAAMM,MADzB,WAGA,0BAAMP,UAAU,6CACd,kBAAC,IAAD,CAAiBC,KAAMO,MADzB,SAGA,0BAAMR,UAAU,6CACd,kBAAC,IAAD,CAAiBC,KAAMQ,MADzB,UAGA,8BACE,2BACEC,GAAG,QACHC,KAAK,QACLpB,MAAOH,EACPwB,IAAI,IACJC,IAAI,IACJC,KAAK,IACLC,SA1CO,SAACC,GACpB3B,EAAS2B,EAAEZ,OAAOb,QA0CNS,UAAU,eAQpB,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QACZH,EAAKoB,KAAI,SAACC,EAAUC,GACnB,OACE,yBACEnB,UAAU,aACVoB,IAAKD,EACLE,QAAS,kBAtDR,SAACF,GACdpB,EAAiBoB,GAqDUG,CAAOH,KAEtB,8BAAOD,EAASvB,KAAhB,KAECwB,IAAUrB,EACT,kBAAC,IAAD,CAAiBG,KAAMsB,IAAevB,UAAU,YAEhD,kBAAC,IAAD,CAAiBC,KAAMuB,IAAgBxB,UAAU,YAGnD,yBAAKA,UAAU,WACZmB,IAAUrB,EACPoB,EAAStB,cAAcqB,KAAI,SAACQ,EAAaN,GACvC,OACE,yBACEnB,UAAU,iBACVqB,QAAS,kBACPlC,EAAqBsC,EAAYlC,QAEnC6B,IAAKD,GAEJM,EAAY9B,SAInB,c,uCCtBP+B,G,MAtHM,WAAO,IAAD,EACCzC,mBAAS,IADV,mBAClB0C,EADkB,KACXC,EADW,OAEe3C,oBAAU,GAFzB,mBAElB4C,EAFkB,KAEJC,EAFI,OAGG7C,mBAAS,IAHZ,mBAGlBmB,EAHkB,KAGV2B,EAHU,OAIO9C,mBAAS,IAJhB,mBAIlB+C,EAJkB,KAIRC,EAJQ,KAKjB7C,EAAUM,qBAAWb,GAArBO,MAEF8C,EAAgB,WACpBJ,GAAiB,GACjBG,EAAY,IACZF,EAAU,IAGV,IADA,IAAII,EAAY,GACPC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIC,EAASC,KAAKC,MAAsB,IAAhBD,KAAKE,SAAiB,GAC9CL,EAAUM,KAAKJ,GAEjBT,EAASO,IAIXO,qBAAU,WACRR,MACC,IAEH,IAAMS,EAAQ,SAACC,GACb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,OAQhDI,EAAY,uCAAG,4BAAAC,EAAA,yDACG,KAAlB7C,EAAO8C,OADQ,iBAERd,EAAI,EAFI,YAEDA,EAAIT,EAAMwB,QAFT,wBAGfrB,EAAgBM,GAHD,SAITO,EAAoB,KAAb,EAAIvD,IAJF,UAKf0C,EAAgBM,EAAI,GAGpBH,GAAY,SAACD,GAAD,4BACPA,GADO,6BAEWI,EAFX,4BAEgCA,EAFhC,eAEwCT,EAAMS,SAGtDT,EAAMS,KAAOgB,SAAShD,GAbX,wBAeb6B,GAAY,SAACD,GAAD,4BACPA,GADO,kCAEgBI,QAG5BN,EAAgBM,GApBH,6BAEiBA,IAFjB,+CAyBjBiB,MAAM,6BAzBW,4CAAH,qDA4BlB,OACE,6BACE,yBAAKrD,UAAU,YACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,gBACb,0BACEA,UAAU,4CACVqB,QAASa,GAET,kBAAC,IAAD,CAAiBjC,KAAMqD,MAJzB,mBAMA,2BACE3C,KAAK,OACL4C,OAAK,EACLC,YAAY,sBACZxD,UAAU,aACVe,SAjDS,SAACC,GACpBe,EAAUf,EAAEZ,OAAOb,QAiDTA,MAAOa,IAET,0BACEJ,UAAU,4CACVqB,QAAS2B,GAET,kBAAC,IAAD,CAAiB/C,KAAMwD,MAJzB,YAWN,yBAAKzD,UAAU,eACb,yBAAKA,UAAU,gBACZ2B,EAAMV,KAAI,SAAC1B,EAAO4B,GACjB,OACE,yBACEC,IAAKD,EACLnB,UAAWmB,IAAUU,EAAe,mBAAqB,QAExDtC,OAKT,yBAAKS,UAAU,cACb,yBAAKA,UAAU,SAAf,cACA,yBAAKA,UAAU,WACZgC,EAASf,KAAI,SAACyC,GACb,OAAO,2BAAIA,YCsCVC,G,MAhJM,WAAO,IAAD,EACC1E,mBAAS,IADV,mBAClB0C,EADkB,KACXC,EADW,OAEe3C,oBAAU,GAFzB,mBAElB4C,EAFkB,KAEJC,EAFI,OAGS7C,oBAAU,GAHnB,mBAGlB2E,EAHkB,KAGPC,EAHO,OAIW5E,oBAAU,GAJrB,mBAIlB6E,EAJkB,KAINC,EAJM,OAKG9E,mBAAS,IALZ,mBAKlBmB,EALkB,KAKV2B,EALU,OAMO9C,mBAAS,IANhB,mBAMlB+C,EANkB,KAMRC,EANQ,KAQnBC,EAAgB,WACpBJ,GAAiB,GACjB+B,GAAc,GACdE,GAAe,GACfhC,EAAU,IAIV,IAFA,IAAII,EAAY,GACZE,EAASC,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,GACpCJ,EAAIC,EAAQD,EAAIC,EAAS,GAAID,IACpCD,EAAUM,KAAKL,GAEjBR,EAASO,IAIXO,qBAAU,WACRR,MACC,IAEH,IAAMS,EAAQ,SAACC,GACb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,OAQhDoB,EAAY,uCAAG,gCAAAf,EAAA,yDACG,KAAlB7C,EAAO8C,OADQ,iBAGjBW,EADII,EAAO,GAEPC,EAAQvC,EAAMwB,OAClBY,EAAcG,GALG,YAOVD,GAAQC,GAPE,oBAQXC,EAAM7B,KAAKC,MAAM0B,GAAQC,EAAQD,GAAQ,GAG7ChC,GAAY,SAACD,GAAD,4BAAkBA,GAAlB,0BAA8CmC,QAE1DrC,EAAgBqC,GACZxC,EAAMwC,KAASf,SAAShD,GAdb,wBAgBb6B,GAAY,SAACD,GAAD,4BACPA,GADO,kCAEgBmC,QAlBf,kCAqBJxC,EAAMwC,GAAO/D,GArBT,wBAuBbyD,EADAI,EAAOE,EAAM,GAGblC,GAAY,SAACD,GAAD,4BACPA,GADO,gDAE8BmC,EAAM,QA3BnC,UA6BPxB,EAAM,KA7BC,uCAgCboB,EADAG,EAAQC,EAAM,GAGdlC,GAAY,SAACD,GAAD,4BACPA,GADO,iDAE+BmC,EAAM,QApCpC,UAsCPxB,EAAM,KAtCC,uDA0CjBU,MAAM,6BA1CW,4CAAH,qDA6ClB,OACE,6BACE,yBAAKrD,UAAU,YACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,gBACb,0BACEA,UAAU,4CACVqB,QAASa,GAET,kBAAC,IAAD,CAAiBjC,KAAMqD,MAJzB,mBAMA,2BACE3C,KAAK,OACL4C,OAAK,EACLC,YAAY,sBACZxD,UAAU,aACVT,MAAOa,EACPW,SAnES,SAACC,GACpBe,EAAUf,EAAEZ,OAAOb,UAoEX,0BACES,UAAU,4CACVqB,QAAS2C,GAET,kBAAC,IAAD,CAAiB/D,KAAMwD,MAJzB,YAUN,yBAAKzD,UAAU,eACb,yBAAKA,UAAU,gBACZ2B,EAAMV,KAAI,SAAC1B,EAAO4B,GACjB,OACE,yBACEC,IAAKD,EACLnB,UACEmB,IAAUU,EACN,mBACAV,GAASyC,GAAazC,GAAS2C,EAC/B,iBACA,QAGLvE,QAQX,yBAAKS,UAAU,cACb,yBAAKA,UAAU,SAAf,cACA,yBAAKA,UAAU,WACZgC,EAASf,KAAI,SAACyC,GACb,OAAO,2BAAIA,W,kBCtFRU,EA3CC,WAAO,IACblF,EAAsBQ,qBAAWb,GAAjCK,kBAWJmF,EARe,CACjB3C,aAAcA,EACdiC,aAAcA,GAMWzE,GACvBoF,EALuB,CACzB5C,aC5ByB,oWD6BzBiC,aCTyB,6hBDYSzE,GAEpC,OACE,yBAAKc,UAAU,QACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SAASU,GAAG,uBACzB,yBAAKV,UAAU,gBACb,6BACE,kBAACqE,EAAD,SAIN,yBAAKrE,UAAU,SAASU,GAAG,QACzB,yBAAKV,UAAU,QACb,yBAAKA,UAAU,SACb,uCAEF,kBAAC,IAAD,CACEuE,SAAS,MACTlE,MAAOmE,IACPC,YAAa,CAAEC,SAAU,KAExBJ,QE9BAK,EAZH,WACV,OACE,6BACE,kBAAC,EAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,UCNUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMnC,a","file":"static/js/main.65c78edc.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\n\nexport const Context = createContext();\n\nconst ContextProvider = (props) => {\n  const [selectedComponent, setSelectedComponent] = useState(\"BinarySearch\");\n  const [speed, setSpeed] = useState(1000);\n\n  return (\n    <Context.Provider\n      value={{ selectedComponent, setSelectedComponent, speed, setSpeed }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n};\n\nexport default ContextProvider;\n","import React, { useState, useContext } from \"react\";\n\n// Stylesheets\nimport \"./Header.css\";\n\n// Slider\nimport Slider from \"react-rangeslider\";\n\n// Fontawesome icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faStar,\n  faChevronRight,\n  faPlay,\n  faTachometerAlt,\n  faCode,\n  faChevronDown,\n  faHeart,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// Context\nimport { Context } from \"../../context/Context\";\n\nconst Header = () => {\n  const { speed, setSpeed } = useContext(Context);\n  const { setSelectedComponent } = useContext(Context);\n  const [menu, setMenu] = useState([\n    {\n      name: \"Backtracking\",\n      subCategories: [\n        {\n          name: \"N Queens Placement\",\n          value: \"NQueensPlacement\",\n        },\n      ],\n    },\n    {\n      name: \"Branch and Bound\",\n      subCategories: [\n        {\n          name: \"Binary Search\",\n          value: \"BinarySearch\",\n        },\n      ],\n    },\n    {\n      name: \"Dynamic Programming\",\n      subCategories: [\n        {\n          name: \"Fibonacci\",\n          value: \"Fibonacci\",\n        },\n      ],\n    },\n    {\n      name: \"Searching\",\n      subCategories: [\n        {\n          name: \"Linear Search\",\n          value: \"LinearSearch\",\n        },\n      ],\n    },\n  ]);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n\n  const handleChange = (e) => {\n    setSpeed(e.target.value);\n  };\n\n  const toggle = (index) => {\n    setSelectedIndex(index);\n  };\n  return (\n    <div>\n      <div className=\"header\">\n        <div className=\"title\">Algorithm Visualizer</div>\n        <div className=\"trademark\">\n          Made with <FontAwesomeIcon icon={faHeart} /> by{\" \"}\n          <a\n            href=\"https://linkedin.com/in/saranrajshri\"\n            target=\"_blank\"\n            className=\"profile-link\"\n          >\n            Shri Saran Raj\n          </a>\n        </div>\n      </div>\n      <div className=\"settings\" style={{ paddingTop: 3 }}>\n        <div className=\"content\">\n          <div className=\"left-content\">\n            <span className=\"font-weight-bold cursor-pointer menu-item\">\n              <FontAwesomeIcon icon={faCode} /> Github\n            </span>\n            <span className=\"font-weight-bold cursor-pointer menu-item\">\n              <FontAwesomeIcon icon={faStar} /> Star\n            </span>\n            <span className=\"font-weight-bold cursor-pointer menu-item\">\n              <FontAwesomeIcon icon={faTachometerAlt} /> Speed\n            </span>\n            <span>\n              <input\n                id=\"range\"\n                type=\"range\"\n                value={speed}\n                min=\"1\"\n                max=\"5\"\n                step=\"1\"\n                onChange={handleChange}\n                className=\"slider\"\n              />\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Side Nav */}\n      <div className=\"sidenav\">\n        <div className=\"menu\">\n          {menu.map((menuItem, index) => {\n            return (\n              <div\n                className=\"menu-title\"\n                key={index}\n                onClick={() => toggle(index)}\n              >\n                <span>{menuItem.name} </span>\n\n                {index === selectedIndex ? (\n                  <FontAwesomeIcon icon={faChevronDown} className=\"chevron\" />\n                ) : (\n                  <FontAwesomeIcon icon={faChevronRight} className=\"chevron\" />\n                )}\n\n                <div className=\"options\">\n                  {index === selectedIndex\n                    ? menuItem.subCategories.map((subCategory, index) => {\n                        return (\n                          <div\n                            className=\"sub-menu-title\"\n                            onClick={() =>\n                              setSelectedComponent(subCategory.value)\n                            }\n                            key={index}\n                          >\n                            {subCategory.name}\n                          </div>\n                        );\n                      })\n                    : null}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\n\nimport \"./LinearSearch.css\";\n\n// Fontawesome icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Context } from \"../../../../context/Context\";\n\nconst LinearSearch = () => {\n  const [array, setArray] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [target, setTarget] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const { speed } = useContext(Context);\n\n  const generateArray = () => {\n    setCurrentIndex(-1);\n    setMessages([]);\n    setTarget(\"\");\n\n    var tempArray = [];\n    for (var i = 0; i < 15; i++) {\n      var number = Math.floor(Math.random() * 100 + 1);\n      tempArray.push(number);\n    }\n    setArray(tempArray);\n  };\n\n  // Component Did Mount\n  useEffect(() => {\n    generateArray();\n  }, []);\n\n  const sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n\n  const handleChange = (e) => {\n    setTarget(e.target.value);\n  };\n\n  // linear Search\n  const linearSearch = async () => {\n    if (target.trim() !== \"\") {\n      for (var i = 0; i < array.length; i++) {\n        setCurrentIndex(i);\n        await sleep((6 - speed) * 1000);\n        setCurrentIndex(i + 1);\n\n        // Log tracer\n        setMessages((messages) => [\n          ...messages,\n          `Checking at index ${i}. Value at index ${i} is ${array[i]}`,\n        ]);\n\n        if (array[i] === parseInt(target)) {\n          // Log tracer\n          setMessages((messages) => [\n            ...messages,\n            `Element Found at index ${i}`,\n          ]);\n\n          setCurrentIndex(i);\n          break;\n        }\n      }\n    } else {\n      alert(\"Enter the element to find\");\n    }\n  };\n  return (\n    <div>\n      <div className=\"settings\">\n        <div className=\"content\">\n          <div className=\"left-content\">\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={generateArray}\n            >\n              <FontAwesomeIcon icon={faSyncAlt} /> Generate array\n            </span>\n            <input\n              type=\"text\"\n              focus\n              placeholder=\"Element to be found\"\n              className=\"inputField\"\n              onChange={handleChange}\n              value={target}\n            />\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={linearSearch}\n            >\n              <FontAwesomeIcon icon={faPlay} /> Play\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"mainContent\">\n        <div className=\"node-wrapper\">\n          {array.map((value, index) => {\n            return (\n              <div\n                key={index}\n                className={index === currentIndex ? \"node currentNode\" : \"node\"}\n              >\n                {value}\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"log-tracer\">\n          <div className=\"label\">Log Tracer</div>\n          <div className=\"content\">\n            {messages.map((message) => {\n              return <p>{message}</p>;\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LinearSearch;\n","import React, { useState, useEffect } from \"react\";\n\n// Stylesheet\nimport \"./BinarySearch.css\";\n\n// Fontawesome icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n// Context\nimport { Context } from \"../../../../context/Context\";\n\nconst BinarySearch = () => {\n  const [array, setArray] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [leftIndex, setLeftIndex] = useState(-1);\n  const [rightIndex, setRightIndex] = useState(-1);\n  const [target, setTarget] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const generateArray = () => {\n    setCurrentIndex(-1);\n    setLeftIndex(-1);\n    setRightIndex(-1);\n    setTarget(\"\");\n\n    var tempArray = [];\n    var number = Math.floor(Math.random() * 80 + 1);\n    for (var i = number; i < number + 15; i++) {\n      tempArray.push(i);\n    }\n    setArray(tempArray);\n  };\n\n  // Component Did Mount\n  useEffect(() => {\n    generateArray();\n  }, []);\n\n  const sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n\n  const handleChange = (e) => {\n    setTarget(e.target.value);\n  };\n\n  // binary Search\n  const binarySearch = async () => {\n    if (target.trim() !== \"\") {\n      var left = 0;\n      setLeftIndex(left);\n      var right = array.length;\n      setRightIndex(right);\n\n      while (left <= right) {\n        var mid = Math.floor(left + (right - left) / 2);\n\n        // Log tracer\n        setMessages((messages) => [...messages, `Middle Index : ${mid}`]);\n\n        setCurrentIndex(mid);\n        if (array[mid] === parseInt(target)) {\n          // Log tracer\n          setMessages((messages) => [\n            ...messages,\n            `Element found at index ${mid}`,\n          ]);\n          break;\n        } else if (array[mid] < target) {\n          left = mid + 1;\n          setLeftIndex(left);\n          // Log tracer\n          setMessages((messages) => [\n            ...messages,\n            `Moving the left pointer to the index ${mid + 1}`,\n          ]);\n          await sleep(1000);\n        } else {\n          right = mid - 1;\n          setRightIndex(right);\n          // Log tracer\n          setMessages((messages) => [\n            ...messages,\n            `Moving the right pointer to the index ${mid - 1}`,\n          ]);\n          await sleep(1000);\n        }\n      }\n    } else {\n      alert(\"Enter the element to find\");\n    }\n  };\n  return (\n    <div>\n      <div className=\"settings\">\n        <div className=\"content\">\n          <div className=\"left-content\">\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={generateArray}\n            >\n              <FontAwesomeIcon icon={faSyncAlt} /> Generate array\n            </span>\n            <input\n              type=\"text\"\n              focus\n              placeholder=\"Element to be found\"\n              className=\"inputField\"\n              value={target}\n              onChange={handleChange}\n            />\n            <span\n              className=\"font-weight-bold cursor-pointer menu-item\"\n              onClick={binarySearch}\n            >\n              <FontAwesomeIcon icon={faPlay} /> Play\n            </span>\n          </div>\n        </div>\n      </div>\n      {/* Main Content */}\n      <div className=\"mainContent\">\n        <div className=\"node-wrapper\">\n          {array.map((value, index) => {\n            return (\n              <div\n                key={index}\n                className={\n                  index === currentIndex\n                    ? \"node currentNode\"\n                    : index >= leftIndex && index <= rightIndex\n                    ? \"node rangeNode\"\n                    : \"node\"\n                }\n              >\n                {value}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Log Tracer */}\n      <div className=\"log-tracer\">\n        <div className=\"label\">Log Tracer</div>\n        <div className=\"content\">\n          {messages.map((message) => {\n            return <p>{message}</p>;\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BinarySearch;\n","import React, { useContext } from \"react\";\n\n// Stylesheet\nimport \"./Content.css\";\n\n// Context\nimport { Context } from \"../../context/Context\";\n\n// Algorithms\nimport LinearSearch from \"../Algorithms/Search/LinearSearch/LinearSearch\";\nimport BinarySearch from \"../Algorithms/Search/BinarySearch/BinarySearch\";\n\n// CodeString\nimport { LinearSearchCode, BinarySearchCode } from \"../CodeStrings/CodeStrings\";\n\n// Code Themes\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { atomDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nconst Content = () => {\n  const { selectedComponent } = useContext(Context);\n\n  // Mappings\n  const components = {\n    LinearSearch: LinearSearch,\n    BinarySearch: BinarySearch,\n  };\n  const codeStringsMapping = {\n    LinearSearch: LinearSearchCode,\n    BinarySearch: BinarySearchCode,\n  };\n  var Component = components[selectedComponent];\n  var codeString = codeStringsMapping[selectedComponent];\n\n  return (\n    <div className=\"root\">\n      <div className=\"row\">\n        <div className=\"column\" id=\"main-content-column\">\n          <div className=\"main-content\">\n            <div>\n              <Component />\n            </div>\n          </div>\n        </div>\n        <div className=\"column\" id=\"code\">\n          <div className=\"code\">\n            <div className=\"label\">\n              <span>Code</span>\n            </div>\n            <SyntaxHighlighter\n              language=\"cpp\"\n              style={atomDark}\n              customStyle={{ fontSize: 12 }}\n            >\n              {codeString}\n            </SyntaxHighlighter>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Content;\n","export const LinearSearchCode = `\n#include<bits/stdc++.h>\nusing namespace std;\n\nvector<int> array = {45, 22, 68, 99, 100 ,120}\nint target = 45;\n\nint linearSearch(vector<int> array, int target){\n    for(int i = 0; i < n; i++){\n        if(array[i] == target) return i;\n    }\n    return -1;\n}\n\nint main(){\n    cout << linearSearch(array, target) << endl;\n    return 0;\n}\n`;\n\nexport const BinarySearchCode = `\n#include<bits/stdc++.h>\nusing namespace std;\n\nvector<int> array = {1, 2, 3, 4, 5, 6, 7, 8}\nint target = 7;\n\nint binarySearch(vector<int> array, int target){\n    int left = 0;\n    int right = array.size() - 1;\n\n    while(left < right){\n        int mid = left + (right - left) / 2;\n        if(array[mid] == target) return mid;\n        else if (array[mid] < target) left = mid + 1;\n        else right = mid - 1;\n    }\n    return -1;\n}\n\nint main(){\n    cout << binarySearch(array, target) << endl;\n    return 0;\n}\n\n`;\n","import React from \"react\";\n\n// Stylesheet\nimport \"./App.css\";\n\n// Components\nimport Header from \"./components/Header/Header\";\nimport Content from \"./components/Content/Content\";\n\n// Context\nimport Context from \"./context/Context\";\n\nconst App = () => {\n  return (\n    <div>\n      <Context>\n        <div>\n          <Header />\n          <Content />\n        </div>\n      </Context>\n    </div>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}